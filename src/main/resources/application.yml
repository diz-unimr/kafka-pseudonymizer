spring:
  jmx:
    enabled: true
  kafka:
    bootstrapServers: ${BOOTSTRAP_SERVERS:localhost:9092}
    security.protocol: ${SECURITY_PROTOCOL:PLAINTEXT}
    ssl:
      trust-store-location: file://${SSL_TRUST_STORE_LOCATION_INTERNAL:/opt/kafka-pseudonymiser/ssl/truststore.jks}
      trust-store-password: ${SSL_TRUST_STORE_PASSWORD}
      key-store-location: file://${SSL_KEY_STORE_LOCATION_INTERNAL:/opt/kafka-pseudonymiser/ssl/keystore.jks}
      key-store-password: ${SSL_KEY_STORE_PASSWORD}

  cloud:
    stream:
      function.definition: process
      bindings:
        process-in-0:
          destination: test123a,test123b,test123c
        process-out-0:
          destination: test12345a
      kafka:
        streams:
          binder:
            applicationId: kafka-pseudonymizer
            configuration:
              compression.type: gzip
              max.request.size: 5242880
            deserializationExceptionHandler: sendToDlq

services:
  pseudonymizer:
    url: "http://localhost:5000/fhir"


server:
  port: 8089

#management:
#  server:
#    port: 8089
#  endpoints:
#    web:
#      exposure:
#        include: "health, prometheus, info, metric"
#  endpoint:
#    health:
#      show-details: always

logging:
  level:
    org.springframework.kafka.config: info
    de.unimarburg.diz.kafkastreamPseudonymiser: debug
